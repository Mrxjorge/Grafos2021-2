from Grafo.Grafo import *
import json

grafo = Grafo(False)
# grafo.ingresarN("Tierra")
# grafo.ingresarN("Venus")
# grafo.ingresarN("Jupiter")
# grafo.ingresarN("Mercurio")
# grafo.ingresarN("Marte")
# grafo.ingresarN("Saturno")
# grafo.ingresarN("Urano")
# grafo.ingresarN("Neptuno")
# grafo.ingresarN("Pluton")
# grafo.ingresarA("Tierra", "Venus",10)
# grafo.ingresarA("Tierra", "Saturno",35)
# grafo.ingresarA("Saturno", "Marte", 20)
# grafo.ingresarA("Saturno", "Venus", 40)
# grafo.ingresarA("Venus", "Jupiter", 18)
# grafo.ingresarA("Saturno", "Urano", 12)
# grafo.ingresarA("Jupiter", "Mercurio", 25)
# grafo.ingresarA("Mercurio", "Pluton", 60)
# grafo.ingresarA("Mercurio", "Neptuno", 35)
# grafo.ingresarA("Saturno", "Mercurio", 20)
# grafo.ingresarA("Jupiter", "Pluton", 30)
# grafo.imprimirN()
# grafo.imprimirA()
# pozos = grafo.buscarPozos()
# fuentes = grafo.buscarFuentes()
# gradoF = grafo.gradoNodo("F")
# print(pozos)
# print(fuentes)
# print(f"El grado del nodo F es {gradoF}")
# grafo.imrpimirAdyacencia("F")
grafo.cargarGrafoJSON("./Data/planets.json")
option = input("Holaaaaaaaaaaa\n")
print(option)
# print(f"El grafo es {grafo.esConexo()} conexo")
# fuentes = grafo.buscarFuentes()
# print(fuentes)
# pozos = grafo.buscarPozos()
# print(pozos)
# grafo.boruvka()
# print("--------------------------------------------")
# grafo.kruskal()
# print("--------------------------------------------")
# grafo.caminoMasCorto("Marte", "Pluton")

# visitados = grafo.amplitud("Saturno")
# nodos = grafo.obtenerNodos()
# setV = set(visitados)
# setN = set(nodos)
# print(f"Visitados: {setV}")
# print(f"Nodos: {setN}")
# print(f"Diferencia: {setN.difference(setV)}")

desconectados = []
for nodo in grafo.listaNodos:
    if not grafo.estaConectado(nodo.dato):
        desconectados.append(nodo.dato)
print(desconectados)